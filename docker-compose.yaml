version: "3"

name: "jsisquesdev"

services:
  dashboard:
    container_name: "jsisquesdev-dashboard"
    image: "jsisques/frontend-dashboard:dev"
    restart: always
    ports:
      - 8080:3000
    env_file:
      - env-files/env/.env.dashboard
    networks:
      - proxynet

  # cv-backend:
  #   container_name: "jsisquesdev-cv-backend"
  #   image: "jsisques/cv-backend:latest"
  #   restart: always
  #   ports:
  #     - 8080:3000
  #   environment:
  #     NODE_ENV: "dev" # pro|dev
  #     IDIOM: "es" # es|en
  #     MONGODB_URL: "mongodb://admin:pass@mongo:27017/"
  #   networks:
  #     - proxynet

  redis:
    container_name: "jsisquesdev-redis"
    image: redis
    restart: always
    ports:
      - 6379:6379
    networks:
      - proxynet

  redisinsight:
    container_name: "jsisquesdev-redisinsight"
    image: redislabs/redisinsight:latest
    restart: always
    ports:
      - "8002:8001"
    volumes:
      - ./Users/ajeetraina/data/redisinsight:/db
    networks:
      - proxynet

  mongo:
    container_name: "jsisquesdev-mongo"
    image: mongo
    restart: always
    env_file:
      - env-files/env/.env.mongo
    ports:
      - 27018:27017
    networks:
      - proxynet

  mongo-express:
    container_name: "jsisquesdev-mongo-express"
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    env_file:
      - env-files/env/.env.mongo
    networks:
      - proxynet

networks:
  proxynet:
    name: "jsisquesdev"
