version: "3"

name: "jsisquesdev"

services:
  dashboard:
    container_name: "jsisquesdev-dashboard"
    image: "jsisques/frontend-dashboard:dev"
    restart: always
    ports:
      - 8080:3000
    environment:
      NODE_ENV: "dev" # pro|dev
      IDIOM: "es" # es|en
    networks:
      - proxynet

  # apisix:
  #   container_name: "jsisquesdev-apisix"
  #   image: apache/apisix:latest
  #   restart: always
  #   volumes:
  #     - ./config/apisix_conf/config.yaml:/usr/local/apisix/conf/apisix.yaml:ro
  #   environment:
  #     - APISIX_STAND_ALONE=true
  #   ports:
  #     - "9180:9180/tcp"
  #     - "9080:9080/tcp"
  #     - "9091:9091/tcp"
  #     - "9443:9443/tcp"
  #     - "9092:9092/tcp"
  #   networks:
  #     - proxynet

  # nginex:
  #   container_name: "jsisquesdev-nginex"
  #   image: nginx:latest
  #   restart: always
  #   volumes:
  #     - ./config/nginex/nginex.conf:/etc/nginx/nginx.conf
  #   ports:
  #     - "9081:80/tcp"
  #   environment:
  #     - NGINX_PORT=80
  #   networks:
  #     - proxynet

  # cv-backend:
  #   container_name: "jsisquesdev-cv-backend"
  #   image: "jsisques/cv-backend:latest"
  #   restart: always
  #   ports:
  #     - 8080:3000
  #   environment:
  # App configuration
  # NODE_ENV=pro|dev
  # DEFAULT_LANGUAGE=en|es

  # # Network configuration
  # PORT=port

  # # Database configuration
  # DATABASE_URL=url
  # DATABASE=database
  # DATABASE_PORT=port
  # DATABASE_USERNAME=username
  # DATABASE_PASSWORD=password
  # DATABASE_DIALECT=mysql
  #   networks:
  #     - proxynet

  redis:
    container_name: "jsisquesdev-redis"
    image: redis
    restart: always
    ports:
      - 6379:6379
    networks:
      - proxynet

  redisinsight:
    container_name: "jsisquesdev-redisinsight"
    image: redislabs/redisinsight:latest
    restart: always
    ports:
      - "8002:8001"
    volumes:
      - ./Users/ajeetraina/data/redisinsight:/db
    networks:
      - proxynet

  mongo:
    container_name: "jsisquesdev-mongo"
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: "admin"
      MONGO_INITDB_ROOT_PASSWORD: "pass"

    ports:
      - 27018:27017
    networks:
      - proxynet

  mongo-express:
    container_name: "jsisquesdev-mongo-express"
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: "admin"
      ME_CONFIG_MONGODB_ADMINPASSWORD: "pass"
      ME_CONFIG_MONGODB_URL: "mongodb://admin:pass@mongo:27017/"
    networks:
      - proxynet

networks:
  proxynet:
    name: "jsisquesdev"
